apiVersion: batch/v1
kind: Job
metadata:
  name: drydock-mfe-lms-job
  labels:
    drydock.io/component: job
    drydock.io/target-service: lms
    drydock.io/runner-service: lms
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: lms
        image: {{ DOCKER_IMAGE_OPENEDX }}
        command: ["/bin/sh", "-c"]
        args:
        - |
          {% if MFE_ACCOUNT_MFE_APP is defined %}
          (./manage.py lms waffle_flag --list | grep account.redirect_to_microfrontend) || ./manage.py lms waffle_flag --create --everyone account.redirect_to_microfrontend
          ./manage.py lms populate_retirement_states
          {% else %}
          ./manage.py lms waffle_delete --flags account.redirect_to_microfrontend
          {% endif %}

          {% if MFE_PROFILE_MFE_APP is defined %}
          (./manage.py lms waffle_flag --list | grep learner_profile.redirect_to_microfrontend) || ./manage.py lms waffle_flag --create --everyone learner_profile.redirect_to_microfrontend
          site-configuration set --domain={{ LMS_HOST }} ENABLE_PROFILE_MICROFRONTEND true
          site-configuration set --domain={{ LMS_HOST }}:8000 ENABLE_PROFILE_MICROFRONTEND true
          {% else %}
          site-configuration unset --domain={{ LMS_HOST }} ENABLE_PROFILE_MICROFRONTEND
          site-configuration unset --domain={{ LMS_HOST }}:8000 ENABLE_PROFILE_MICROFRONTEND
          ./manage.py lms waffle_delete --flags learner_profile.redirect_to_microfrontend
          {% endif %}

          {% if MFE_LEARNING_MFE_APP is defined %}
          (./manage.py lms waffle_flag --list | grep course_home.course_home_mfe_progress_tab) || ./manage.py lms waffle_flag --create --everyone course_home.course_home_mfe_progress_tab
          {% else %}
          ./manage.py lms waffle_delete --flags course_home.course_home_mfe_progress_tab
          {% endif %}

          {% if MFE_COURSE_AUTHORING_MFE_APP is defined %}
          (./manage.py lms waffle_flag --list | grep discussions.pages_and_resources_mfe) || ./manage.py lms waffle_flag --create --everyone discussions.pages_and_resources_mfe
          (./manage.py lms waffle_flag --list | grep new_core_editors.use_new_text_editor) || ./manage.py lms waffle_flag --create --deactivate new_core_editors.use_new_text_editor
          (./manage.py lms waffle_flag --list | grep new_core_editors.use_new_video_editor) || ./manage.py lms waffle_flag --create --deactivate new_core_editors.use_new_video_editor
          (./manage.py lms waffle_flag --list | grep new_core_editors.use_new_problem_editor) || ./manage.py lms waffle_flag --create --deactivate new_core_editors.use_new_problem_editor
          {% else %}
          ./manage.py lms waffle_delete --flags discussions.pages_and_resources_mfe
          ./manage.py lms waffle_delete --flags new_core_editors.use_new_text_editor
          ./manage.py lms waffle_delete --flags new_core_editors.use_new_video_editor
          ./manage.py lms waffle_delete --flags new_core_editors.use_new_problem_editor
          {% endif %}

          {% if MFE_DISCUSSIONS_MFE_APP is defined %}
          (./manage.py lms waffle_flag --list | grep discussions.enable_discussions_mfe ) || ./manage.py lms waffle_flag --create --everyone discussions.enable_discussions_mfe
          (./manage.py lms waffle_flag --list | grep discussions.enable_learners_tab_in_discussions_mfe ) || ./manage.py lms waffle_flag --create --everyone discussions.enable_learners_tab_in_discussions_mfe
          (./manage.py lms waffle_flag --list | grep discussions.enable_moderation_reason_codes ) || ./manage.py lms waffle_flag --create --everyone discussions.enable_moderation_reason_codes
          (./manage.py lms waffle_flag --list | grep discussions.enable_reported_content_email_notifications ) || ./manage.py lms waffle_flag --create --everyone discussions.enable_reported_content_email_notifications
          (./manage.py lms waffle_flag --list | grep discussions.enable_learners_stats ) || ./manage.py lms waffle_flag --create --everyone discussions.enable_learners_stats
          {% else %}
          ./manage.py lms waffle_delete --flags discussions.enable_discussions_mfe
          ./manage.py lms waffle_delete --flags discussions.enable_learners_tab_in_discussions_mfe
          ./manage.py lms waffle_delete --flags discussions.enable_moderation_reason_codes
          ./manage.py lms waffle_delete --flags discussions.enable_reported_content_email_notifications
          ./manage.py lms waffle_delete --flags discussions.enable_learners_stats
          {% endif %}
        env:
        - name: SERVICE_VARIANT
          value: lms
        - name: DJANGO_SETTINGS_MODULE
          value: lms.envs.tutor.production
        volumeMounts:
          - mountPath: /openedx/edx-platform/lms/envs/tutor/
            name: settings-lms
          - mountPath: /openedx/edx-platform/cms/envs/tutor/
            name: settings-cms
          - mountPath: /openedx/config
            name: config
      volumes:
      - name: settings-lms
        configMap:
          name: openedx-settings-lms
      - name: settings-cms
        configMap:
          name: openedx-settings-cms
      - name: config
        configMap:
          name: openedx-config
